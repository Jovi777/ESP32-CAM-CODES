#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>

#define WIFI_SSID "REPLACE_WITH_YOUR_WIFI_SSID"
#define WIFI_PASSWORD "REPLACE_WITH_YOUR_PASSWORD"

#define BOT_TOKEN "REPLACE_WITH_YOUR_BOT_TOKEN"

const unsigned long BOT_MTBS = 1000; 
WiFiClientSecure secured_client;
UniversalTelegramBot bot(BOT_TOKEN, secured_client);
unsigned long bot_lasttime;          
bool Start = false;

void handleNewMessages(int numNewMessages)
{
 Serial.println("handleNewMessages");
 Serial.println(String(numNewMessages));

 for (int i = 0; i < numNewMessages; i++)
 {
   String chat_id = bot.messages[i].chat_id;
   String text = bot.messages[i].text;

   String from_name = bot.messages[i].from_name;
   if (from_name == "")
     from_name = "Guest";

   if (text == "/send_test_action")
   {
     bot.sendChatAction(chat_id, "typing");
     delay(4000);
     bot.sendMessage(chat_id, "Did you see the action message?");
   }

   if (text == "/start")
   {
     String welcome = "Welcome to Universal Arduino Telegram Bot library, " + from_name + ".\n";
     welcome += "This is Chat Action Bot example.\n\n";
     welcome += "/send_test_action : to send test chat action message\n";
     bot.sendMessage(chat_id, welcome);
   }
 }
}

void setup()
{
 Serial.begin(115200);
 Serial.println();

 Serial.print("Connecting to Wifi SSID ");
 Serial.print(WIFI_SSID);
 WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
 secured_client.setCACert(TELEGRAM_CERTIFICATE_ROOT); 
 while (WiFi.status() != WL_CONNECTED)
 {
   Serial.print(".");
   delay(500);
 }
 Serial.print("\nWiFi connected. IP address: ");
 Serial.println(WiFi.localIP());

 Serial.print("Retrieving time: ");
 configTime(0, 0, "pool.ntp.org"); 
 time_t now = time(nullptr);
 while (now < 24 * 3600)
 {
   Serial.print(".");
   delay(100);
   now = time(nullptr);
 }
 Serial.println(now);
}

void loop()
{
 if (millis() - bot_lasttime > BOT_MTBS)
 {
   int numNewMessages = bot.getUpdates(bot.last_message_received + 1);

   while (numNewMessages)
   {
     Serial.println("got response");
     handleNewMessages(numNewMessages);
     numNewMessages = bot.getUpdates(bot.last_message_received + 1);
   }

   bot_lasttime = millis();
 }
}
